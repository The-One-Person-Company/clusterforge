apiVersion: batch/v1
kind: Job
metadata:
  name: harbor-postgres-init
  namespace: harbor
  labels:
    app: harbor
    managed-by: script
    environment: production
spec:
  template:
    metadata:
      labels:
        app: harbor
        job: postgres-init
    spec:
      restartPolicy: OnFailure
      containers:
        - name: postgres-init
          image: postgres:11
          env:
            - name: PGHOST
              value: postgres.database.svc.cluster.local
            - name: PGPORT
              value: "5432"
            - name: PGDATABASE
              valueFrom:
                secretKeyRef:
                  name: harbor-secrets
                  key: POSTGRES_DB
            - name: PGUSER
              valueFrom:
                secretKeyRef:
                  name: harbor-secrets
                  key: POSTGRES_USER
            - name: PGPASSWORD
              valueFrom:
                secretKeyRef:
                  name: harbor-secrets
                  key: POSTGRES_PASSWORD
            - name: HARBOR_DATABASE_NAME
              valueFrom:
                secretKeyRef:
                  name: harbor-secrets
                  key: HARBOR_DATABASE_NAME
            - name: HARBOR_DATABASE_USER
              valueFrom:
                secretKeyRef:
                  name: harbor-secrets
                  key: HARBOR_DATABASE_USER
            - name: HARBOR_DATABASE_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: harbor-secrets
                  key: HARBOR_DATABASE_PASSWORD
          command: ["/bin/sh", "-c"]
          args:
            - |
              set -e

              echo "Checking if database '$HARBOR_DATABASE_NAME' exists..."
              if ! psql -d postgres -tAc "SELECT 1 FROM pg_database WHERE datname='$HARBOR_DATABASE_NAME'" | grep -q 1; then
                echo "Database does not exist. Creating..."
                psql -d postgres -c "CREATE DATABASE \"$HARBOR_DATABASE_NAME\";"
              else
                echo "Database already exists."
              fi

              echo "Checking if user '$HARBOR_DATABASE_USER' exists..."
              if ! psql -d postgres -tAc "SELECT 1 FROM pg_roles WHERE rolname='$HARBOR_DATABASE_USER'" | grep -q 1; then
                echo "User does not exist. Creating..."
                psql -d postgres -c "CREATE USER \"$HARBOR_DATABASE_USER\" WITH PASSWORD '$HARBOR_DATABASE_PASSWORD';"
              else
                echo "User already exists."
              fi

              echo "Granting privileges..."
              psql -d postgres -c "GRANT ALL PRIVILEGES ON DATABASE \"$HARBOR_DATABASE_NAME\" TO \"$HARBOR_DATABASE_USER\";"
              psql -d "$HARBOR_DATABASE_NAME" -c "GRANT ALL ON SCHEMA public TO \"$HARBOR_DATABASE_USER\";"
              psql -d "$HARBOR_DATABASE_NAME" -c "GRANT ALL PRIVILEGES ON ALL TABLES IN SCHEMA public TO \"$HARBOR_DATABASE_USER\";"
              psql -d "$HARBOR_DATABASE_NAME" -c "GRANT ALL PRIVILEGES ON ALL SEQUENCES IN SCHEMA public TO \"$HARBOR_DATABASE_USER\";"
              psql -d "$HARBOR_DATABASE_NAME" -c "ALTER DEFAULT PRIVILEGES IN SCHEMA public GRANT ALL ON TABLES TO \"$HARBOR_DATABASE_USER\";"
              psql -d "$HARBOR_DATABASE_NAME" -c "ALTER DEFAULT PRIVILEGES IN SCHEMA public GRANT ALL ON SEQUENCES TO \"$HARBOR_DATABASE_USER\";"

              echo "âœ… PostgreSQL initialization complete."
