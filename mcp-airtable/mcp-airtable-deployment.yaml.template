apiVersion: apps/v1
kind: Deployment
metadata:
  name: ${MCP_SERVICE_NAME}
  namespace: mcp
  labels:
    app: ${MCP_SERVICE_NAME}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: ${MCP_SERVICE_NAME}
  template:
    metadata:
      labels:
        app: ${MCP_SERVICE_NAME}
    spec:
      securityContext:
        fsGroup: 1000
        runAsUser: 1000
        runAsGroup: 1000
      containers:
      - name: ${MCP_SERVICE_NAME}
        image: node:18-alpine
        workingDir: /app
        command: ["/bin/sh"]
        args: 
        - -c
        - |
          npx -y airtable-mcp-server
        ports:
        - containerPort: 3000
          name: http
        env:
        - name: NODE_ENV
          valueFrom:
            configMapKeyRef:
              name: ${MCP_SERVICE_NAME}-config
              key: NODE_ENV
        - name: PORT
          valueFrom:
            configMapKeyRef:
              name: ${MCP_SERVICE_NAME}-config
              key: PORT
        - name: AIRTABLE_API_KEY
          valueFrom:
            secretKeyRef:
              name: ${MCP_SERVICE_NAME}-secret
              key: AIRTABLE_API_KEY
        resources:
          requests:
            memory: "128Mi"
            cpu: "100m"
          limits:
            memory: "512Mi"
            cpu: "500m"
        livenessProbe:
          httpGet:
            path: /
            port: 3000
          initialDelaySeconds: 60
          periodSeconds: 30
          timeoutSeconds: 10
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /
            port: 3000
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        volumeMounts:
        - name: ${MCP_SERVICE_NAME}-storage
          mountPath: /app/data
      volumes:
      - name: ${MCP_SERVICE_NAME}-storage
        persistentVolumeClaim:
          claimName: ${MCP_SERVICE_NAME}-storage 